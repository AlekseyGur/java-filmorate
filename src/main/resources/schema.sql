-- Сначала создаем таблицы, на которые будут ссылаться другие
CREATE TABLE IF NOT EXISTS genre (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS mpa (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(200) NOT NULL UNIQUE,
    login VARCHAR(200) NOT NULL CHECK (login <> ''),
    name VARCHAR(200),
    birthday DATE CHECK (birthday <= CURRENT_DATE)
);

-- Затем создаем таблицы с внешними ключами
CREATE TABLE IF NOT EXISTS films (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) NOT NULL CHECK (name <> ''),
    description VARCHAR(200),
    release_date DATE CHECK (release_date <= CURRENT_DATE),
    duration INT CHECK (duration > 0),
    mpa BIGINT REFERENCES mpa(id)
);

CREATE TABLE IF NOT EXISTS friends (
    sender_id BIGINT REFERENCES users(id),
    receiver_id BIGINT REFERENCES users(id),
    
    PRIMARY KEY (sender_id, receiver_id),
    CONSTRAINT friends_check CHECK (sender_id <> receiver_id)
);

CREATE TABLE IF NOT EXISTS films_likes (
    film_id BIGINT REFERENCES films(id),
    user_id BIGINT REFERENCES users(id),
    
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS films_genres (
    film_id BIGINT REFERENCES films(id),
    genre_id BIGINT REFERENCES genre(id),
    
    PRIMARY KEY (film_id, genre_id)
);